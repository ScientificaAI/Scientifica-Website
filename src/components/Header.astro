---
import { navLinks } from "../data/links.js";
import IconLinkedin from "./IconLinkedin.astro";
import IconMedium from "./IconMedium.astro";
---

<header>
  <div class="container mr-auto flex justify-between items-center">
    <!-- Left container: Logo -->
    <div class="flex items-center md:ml-11">
      <img
        src="https://res.cloudinary.com/dqxd8euqj/image/upload/v1720534873/logo_fmtgrn.png"
        alt="Logo"
        class="h-8"
      />
    </div>
    <!-- Right container: Navigation links for desktop -->
    <div class="hidden md:flex space-x-10 md:justify-center md:items-center">
      {
        navLinks.map((link) => (
          <a href={link.href} class="hover:text-[#0024ff] md:text-xl">
            <span>{link.text}</span>
          </a>
        ))
      }
    </div>
    <!-- Hamburger button for mobile -->
    <button id="menu-button" class="md:hidden flex items-center">
      <svg
        class="w-10 h-10"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16m-7 6h7"></path>
      </svg>
    </button>
  </div>
</header>
<!-- Mobile menu -->
<div id="mobile-nav" class="mobile-nav">
  <nav>
    {
      navLinks.map((link) => (
        <a href={link.href}>
          <span>{link.text}</span>
        </a>
      ))
    }
    <div class="flex">
      <div class="m-10 w-15">
        <a
          target="_blank"
          rel="noopener"
          href=""
          class="hover:scale-125 hover:opacity-75 transition inline-block"
        >
          <IconLinkedin />
        </a>
      </div>
      <div class="m-10 w-15">
        <a
          target="_blank"
          rel="noopener"
          href=""
          class="hover:scale-125 hover:opacity-75 transition inline-block"
        >
          <IconMedium />
        </a>
      </div>
    </div>
  </nav>
</div>

<style lang="scss">
  .mobile-nav {
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    max-height: 0;
    transition:
      max-height 0.5s ease-in-out,
      opacity 0.5s ease-in-out;
    nav {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      margin-top: 100px;

      a {
        font-size: 2.25rem;
        line-height: 2.25rem;
        margin-top: 1rem;
        margin-bottom: 1rem;

        &:hover {
          color: rgb(37 99 235);
        }
      }
    }
  }

  .mobile-active {
    display: contents;
    opacity: 1;
    max-height: 500px;
    min-width: 900px;
    background-color: #fff;
    z-index: 9999;
    top: 100px;
  }

  header {
    position: fixed;
    width: 100%;
    height: 40px;
    background-color: #ffffff;
    color: #000000;
    padding-top: 0.5rem;
    padding-bottom: 1.5rem;
    padding-left: 2rem;
    padding-right: 2rem;
    min-height: 3.5rem;
    top: 0;
    left: 0;
    z-index: 99;
    transition: all 0.3s ease;
  }

  .active {
    color: #0024ff;
  }

  .scroll-down {
    transform: translate3d(0, -100px, 0);
  }

  .scroll-up {
    filter: drop-shadow(0 -10px 20px rgba(170, 170, 170));
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuButton = document.getElementById("menu-button");
    const mobileMenu = document.getElementById("mobile-nav");

    menuButton!.addEventListener("click", () => {
      mobileMenu!.classList.toggle("mobile-active");
    });
  });
</script>

<script>
  const header = document.querySelector("header");
  let lastScroll = 0;

  window.addEventListener("scroll", () => {
    const currentScroll = window.scrollY;

    if (currentScroll <= 0) {
      header!.classList.remove("scroll-up");
    }

    if (
      currentScroll > lastScroll &&
      !header!.classList.contains("scroll-down")
    ) {
      header!.classList.remove("scroll-up");
      header!.classList.add("scroll-down");
    }

    if (
      currentScroll < lastScroll &&
      header!.classList.contains("scroll-down")
    ) {
      header!.classList.remove("scroll-down");
      header!.classList.add("scroll-up");
    }

    lastScroll = currentScroll;
  });
</script>

<script>
  const navlinks = document.querySelectorAll("a");
  const windowPath = window.location.pathname;

  navlinks.forEach((navLinkEl) => {
    const navLinkPathName = new URL(navLinkEl.href).pathname;
    if (windowPath === navLinkPathName) {
      navLinkEl.classList.add("active");
    } else {
      navLinkEl.classList.remove("active");
    }
  });
</script>
